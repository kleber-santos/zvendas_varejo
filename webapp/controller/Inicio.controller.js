sap.ui.define(["sap/ui/core/mvc/Controller"], function(Controller) {
	"use strict";
	return Controller.extend("arcelor.controller.Inicio", {
		/**
		 * Called when a controller is instantiated and its View controls (if available) are already created.
		 * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
		 * @memberOf ancelor.view.view.Inicio
		 */
		onInit: function() {
				// var that = this;
				// this.getRouter().getTargets().getTarget("inicio").attachDisplay(null, this._onDisplay, this);
				// this._oODataModel = this.getOwnerComponent().getModel();
				// this._oResourceBundle = this.getResourceBundle();
				// this._oViewModel = new JSONModel({
				// 	enableCreate: false,
				// 	delay: 0,
				// 	busy: false,
				// 	mode: "create",
				// 	viewTitle: ""
				// });
				// this.setModel(this._oViewModel, "viewModel");
				// // Register the view with the message manager
				// sap.ui.getCore().getMessageManager().registerObject(this.getView(), true);
				// var oMessagesModel = sap.ui.getCore().getMessageManager().getMessageModel();
				// this._oBinding = new sap.ui.model.Binding(oMessagesModel, "/", oMessagesModel.getContext("/"));
				// this._oBinding.attachChange(function(oEvent) {
				// 	var aMessages = oEvent.getSource().getModel().getData();
				// 	for (var i = 0; i < aMessages.length; i++) {
				// 		if (aMessages[i].type === "Error" && !aMessages[i].technical) {
				// 			that._oViewModel.setProperty("/enableCreate", false);
				// 		}
				// 	}
				// });
			}
			/**
			 * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered
			 * (NOT before the first rendering! onInit() is used for that one!).
			 * @memberOf ancelor.view.view.Inicio
			 */
			//	onBeforeRendering: function() {
			//
			//	},
			/**
			 * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.
			 * This hook is the same one that SAPUI5 controls get after being rendered.
			 * @memberOf ancelor.view.view.Inicio
			 */
			//	onAfterRendering: function() {
			//
			//	},
			/**
			 * Called when the Controller is destroyed. Use this one to free resources and finalize activities.
			 * @memberOf ancelor.view.view.Inicio
			 */
			//	onExit: function() {
			//
			//	}
			,
		/**
		 *@memberOf ancelor.controller.Inicio
		 */
		_navBack: function() {
			//This code was generated by the layout editor.
				var oHistory = sap.ui.core.routing.History.getInstance(),
				sPreviousHash = oHistory.getPreviousHash();

			this.getView().unbindObject();
			if (sPreviousHash !== undefined) {
				// The history contains a previous entry
				history.go(-1);
			} else {
				this.getRouter().getTargets().display("master");
			}
		}
	});
});